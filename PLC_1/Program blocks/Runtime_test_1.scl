FUNCTION_BLOCK "Runtime_test_1"
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1
   VAR 
      FB_LTIME_opt : LReal;
      FB_LTIME_notopt : LReal;
      MEM_RUNTIME_opt : LReal;   //  память для вимірювання часу циклу
      MEM_RUNTIME_notopt : LReal;   //  память для вимірювання часу циклу
      FB_LTIME_notopt_tmp : LReal;
      FB_LTIME_opt_tmp : LReal;
      opimized { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'; S7_SetPoint := 'False'} : Array[0..500] of "UDT_ACB_ETI";
   END_VAR

   VAR_TEMP 
      i : Int;
      j : Int;
   END_VAR


BEGIN
	REGION _name_
	    ;
	    #FB_LTIME_opt_tmp := RUNTIME(#MEM_RUNTIME_opt) * 1000.0;
	    
	    FOR #j := 1 TO 5 DO
	        FOR #i := 1 TO 499 DO
	            // Statement section FOR
	            // opimized[#i] := opimized[#i + 1];
	            
	            #opimized[#i].State.Error := NOT #opimized[#i].State.Error;
	            #opimized[#i].State.Warning := #opimized[#i].State.Error AND NOT #opimized[#i].State.Error;
	            #opimized[#i].State.Interlocked := #opimized[#i].State.Error AND NOT #opimized[#i].State.Error;
	            #opimized[#i].State.Ready := #opimized[#i].State.Error AND NOT #opimized[#i].State.Error;
	            #opimized[#i].State.Ready := #opimized[#i].State.Error AND NOT #opimized[#i].State.Error;
	            #opimized[#i].State.Opening := #opimized[#i].State.Error AND NOT #opimized[#i].State.Error;
	            #opimized[#i].State.InCmdAutoClose := #opimized[#i].State.Error AND NOT #opimized[#i].State.Error;
	            ;
	        END_FOR;
	    END_FOR;
	
	
	    #FB_LTIME_opt := RUNTIME(#MEM_RUNTIME_opt) * 1000.0;
	END_REGION
	
END_FUNCTION_BLOCK

